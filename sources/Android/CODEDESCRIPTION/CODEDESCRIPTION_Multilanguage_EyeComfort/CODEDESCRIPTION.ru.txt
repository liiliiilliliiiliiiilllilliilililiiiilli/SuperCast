SuperCast — описание кода. Android.


В текущем файле описывается кодовая база проекта под платформу Android, примеменные подходы к оформлению кода и прочие моменты.
Файлы CODEDESCRIPTION и README для доступности переведены на несколько языков и оформлены в стиле MarkDown или EyeComfort.

Файловая система проекта имеет строгую структуру.
Код прокомментирован и придерживается определенного стиля (отступы, нейминг и литералы, взаиморасположение функциональных блоков и др.).


• Файлы и папки:

    Кроме необходимых для работы приложения .xml и .webp, проект строится только из файлов .kt (функционал) или файлов ресурсов .png (изображения) и .ttf (шрифты).
    Вы не найдете файлов других расширений.

    Наименование файлов проекта прижерживается следующей конвенции:

        Все Kotlin-файлы оформлены в стиле PascalCase (НазваниеФайла.kt).
        Все файлы Ресурсов оформлены в стиле SnakeCase (название_файла.png).
        Все Kotlin-пакеты (кроме пакетов _types_/ для Kotlin-типов) оформлены слитно в нижнем регистре (названиепакета/)
        Все Kotlin-пакеты и файлы, используемые только на время разработки, обособляются с двух сторон двумя нижними подчеркиваниями (__названиепакета__/, __НазваниеФайла__.kt_, __название_файла__.png).


• Структура:

    • res/ - папка Ресурсов. Используется только drawable/ (только .png, только 150*150 или 500*500) и font/ (только .ttf).

    • com.example.supercast/ - папка Активностей, в которой ведется вся разработка:

        • MainActivity.kt - главная и единственная Активность приложения.

        • lib/ - все библиотеки проекта - цвета, шрифты, изображения, а также Kotlin-методы, вынесенные отдельно.

        • ui/ - все графические компоненты для MainActivity:

            • Ui.kt - главный и единственный компонент, который отрисовывает MainActivity.

            • components/ - общие компоненты, используемые разными страницами навигации.

                Некоторые компоненты могут быть сложными, поэтому они сами дробятся на части.
                Под эти части не создается очередная внутренная папка "components" - они размещяются в своих пакетах пососедству.
                Если необходимо, такие части можно в очередной раз дробить.

            • pages/ - страницы навигации, составляющие UI:

                Каждая страница разбита на графические слои layers/:

                    Main - самый нижний и основной слой, где располагаются главные комоненты страницы.
                    Tools - слой поверх основного, используемый для баров, fixed кнопок и прочих неподвижных элементов.
                    Sliders - скользящие по экрану боковые меню.
                    Windows - самый высокий слой, отображающий всплывающие окна.

                Компоненты на одном слое никогда не пересекаются - конвеция слоев создана сделать пользовательский опыт более понятным.

                Компоненты, составляющие слой страницы навигации, обособлены в локальную папку .../layers/[layer]/components/.
                Если необходимо, компоненты слоя или напрямую слой могут задействовать компоненты из папки com.example.supercast/ui/components/.


• Важные моменты:

  В проекте вы никогда не увидите чего-то в роде ".../components/.../components/.../components/...".
  Такая перегрузка усложнаяет проект, и ее лучше избегать.

  В любых папках "components" компоненты могут использовать друг-друга для самопостроения (избегая рекурсии), но в "кишки" (в составные части) к соседнему компоненту залезть не получится.
  Любая составня часть любого компонента инкапсулирована в этом компоненте - компоненты имеют строгую иерархию использования своих частей вглубь.

  Компоненты используются, но никогда не копируются для использования.
  Любой обьявленный графический компонент должен быть достаточно гибким для кастомизации по содержанию или дизайну - плодить несколько подобных кмопонентов существенно замедляет разработку и отладку.


Все! Да пребудет с вами сила!